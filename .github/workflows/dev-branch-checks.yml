name: Stock Price Prediction Dev Checks

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  check_changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        id: check_changes
        run: |
          git fetch --unshallow
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q .; then
            echo "Changes detected"
            echo "skip_checks=false" >> $GITHUB_OUTPUT
          else
            echo "No changes detected"
            echo "skip_checks=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.check_changes.outputs.skip_checks != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.7'

      - name: Install TA-Lib
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          # Install prerequisites
          sudo apt-get update
          sudo apt-get install -y build-essential wget

          # Download and install TA-Lib
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/
          ./configure --prefix=/usr
          make
          sudo make install

          # Important - verify installation
          ls -la /usr/lib/libta* || echo "No libraries found in /usr/lib"

          # Create symbolic link to ensure correct library name
          if [ -f /usr/lib/libta_lib.so.0 ] && [ ! -f /usr/lib/libta_lib.so ]; then
            sudo ln -s /usr/lib/libta_lib.so.0 /usr/lib/libta_lib.so
          fi

          # Make sure libraries are properly registered
          sudo ldconfig

          # Check if the library is properly registered
          ldconfig -p | grep libta || echo "Library not registered with ldconfig"

      - name: Install Python packages
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          python -m pip install --upgrade pip
          
          # Install TA-Lib Python wrapper using pip with the C library already installed
          pip install TA-Lib
          
          # Install other dependencies
          pip install -r requirements.txt || pip install $(grep -v "^ta-lib" requirements.txt)
          
          # Verify installation
          python -c "import talib; print('TA-Lib successfully imported!')"

      - name: Run Flake8 Linting
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          echo "Running flake8 linting..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Unit Tests
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          pytest tests/ --maxfail=5 --disable-warnings

      - name: Verify FastAPI App
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          nohup uvicorn api:app --host 127.0.0.1 --port 8002 --reload &
          sleep 5
          curl -f http://127.0.0.1:8002/docs || (echo "FastAPI server failed to start" && exit 1)
          echo "âœ… FastAPI app is running successfully."

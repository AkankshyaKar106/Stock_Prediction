name: Stock Price Prediction Dev Checks

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  check_changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        id: check_changes
        run: |
          git fetch --unshallow || true
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q .; then
            echo "Changes detected"
            echo "skip_checks=false" >> $GITHUB_OUTPUT
          else
            echo "No changes detected"
            echo "skip_checks=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.check_changes.outputs.skip_checks != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.7'

      - name: Install TA-Lib
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget
      
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/
          ./configure --prefix=/usr/local
          make
          sudo make install
      
          # Ensure library path is known
          echo "/usr/local/lib" | sudo tee -a /etc/ld.so.conf.d/ta-lib.conf
          sudo ldconfig

      - name: Install TA-Lib Python wrapper manually (to avoid _ta_lib.c error)
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          export CFLAGS="-I/usr/local/include"
          export LDFLAGS="-L/usr/local/lib"
          export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig"
      
          python -m pip install --upgrade pip
          pip install Cython
          git clone https://github.com/mrjbq7/ta-lib.git
          cd ta-lib
          python setup.py build_ext --inplace
          python setup.py install

      - name: Debug TA-Lib Installation
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          echo "==> Checking include path"
          ls -l /usr/local/include/ta-lib || echo "❌ Missing header files"

          echo "==> Checking lib path"
          ls -l /usr/local/lib/libta_lib.* || echo "❌ Missing TA-Lib binaries"

      
      - name: Install Python packages (with TA-Lib env)
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          export CFLAGS="-I/usr/local/include"
          export LDFLAGS="-L/usr/local/lib"
          export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig"
      
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -c "import talib; print('✅ TA-Lib successfully imported!')"


      - name: Run Flake8 Linting
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          echo "Running flake8 linting..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Unit Tests
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          pytest tests/ --maxfail=5 --disable-warnings

      - name: Verify FastAPI App
        if: steps.check_changes.outputs.skip_checks != 'true'
        run: |
          nohup uvicorn api:app --host 127.0.0.1 --port 8002 --reload &
          sleep 5
          curl -f http://127.0.0.1:8002/docs || (echo "FastAPI server failed to start" && exit 1)
          echo "✅ FastAPI app is running successfully."
